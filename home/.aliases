#! /bin/bash
#############################
#         ALIASES           #
#############################
# navegación
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~"


# atajos
alias c="clear"
alias e="exit"
alias h="history"
alias t="touch"
alias w="which"
alias sz="source ~/.zshrc"
alias sb="source ~/.bashrc"
alias update-grub="grub-mkconfig -o /boot/grub/grub.cfg"

# systemd
alias status="sudo systemctl status"
alias enable="sudo systemctl enable"
alias disable="sudo systemctl disable"
alias start="sudo systemctl start"
alias restart="sudo systemctl restart"
alias {poweroff,apagar}="sudo systemctl poweroff"
alias {reboot,reiniciar}="sudo systemctl reboot"
alias {suspend,suspender}="sudo systemctl suspend"
alias restart-pulse="systemctl --user restart pulseaudio"


# permite ejecutar aliases con sudo
alias sudo="sudo "


# verbose en los comandos básicos y pedir confirmación
alias mv="mv -vi"         #confirmar antes de sobreescribir y muestra lo que hace
alias cp="cp -vi"         #confirmar antes de sobreescribir y muestra lo que hace
alias rm="rm -rfv"        #muestra lo que hace. borra directorios
alias mkdir="mkdir -pv"   #muestra lo que hace
alias ln="ln -vi"         #confirmar antes de sobreescribir y muestra lo que hace


# listar archivos
if [ -f /usr/bin/exa ]; then
    alias ls="exa --color=auto --group-directories-first -s extension" # ordena exa
    alias l="exa -1 --group-directories-first"
    alias la="exa -a --group-directories-first"
    alias ll="exa -la --group-directories-first"
    alias lt="exa -T -L 2  --group-directories-first"
    alias ltt="exa -T -L 3 --group-directories-first"
else
    alias ls="ls --color=auto --group-directories-first -vXH" # ordena ls
    alias l="ls -w 1"
    alias la="ls -A"
    alias ll="ls -lhA"
fi

# gestión de paquetes
## yay

# pacman
if [ -f /usr/bin/pacman ]; then
    alias {update,refrescar}="sudo pacman -Syy"
    alias {upgrade,actualizar}="sudo pacman -Syu --noconfirm && if [ -f /usr/bin/flatpak ] ; then flatpak update -y ; fi" # actualiza sin pedir confirmación para instalar
    alias {install,instalar}="sudo pacman -S"
    alias {remove,remover}="sudo pacman -R"
    alias {autoremove,limpiar}="sudo pacman -Rscn"
    alias {search,buscar}="pacman -Ss"
    alias {dep,dependencies,dependencias}="pactree -d 1 --color" # muestra dependencias de un paquete
    alias is="pacman -Qs"
    alias remove-f="sudo pacman -Rdd" # fuerza desinstalación a pesar de las dependencias
    alias huerfanos="pacman -Qdtq"  # busca paquetes huérfanos
    alias update-mirrors="sudo reflector --country Brazil,Chile,Paraguay --protocol http,https --fastest 10 --verbose --save /etc/pacman.d/mirrorlist && sudo pacman -Syy && cat  /etc/pacman.d/mirrorlist" # (solo arch)
    #alias update-mirrors="sudo pacman-mirrors -c Chile,Uruguay,Brazil && sudo pacman -Syy" # actualiza los mirrors de los paises dados (solo manjaro)
    alias yay="yay --aur"
fi

## apt
if [ -f /usr/bin/apt ]; then
  alias {update,refrescar}='sudo apt update'
  alias {upgrade,actualizar}='sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && if [ -f /usr/bin/flatpak ] ; then flatpak update -y ; fi' # actualiza sin pedir confirmación para instalar
  alias {install,instalar}='sudo apt update && sudo apt install'
  alias {remove,remover}="sudo apt remove"
  alias {autoremove,limpiar}="sudo apt autoremove"
  alias {search,buscar}="apt search"
  alias {dep,dependencies,dependencias}="apt-cache depends"
  alias is="apt list --installed | grep"
fi


# flags en comandos que facilitan la vida
alias rsync="rsync -aAXv --progress"
alias fsck="sudo fsck -V -y" # acepta todas las correciones sin preguntar y muestra lo que hace
alias ping="ping -c 5"


# sudo en comandos recurrentes
alias mount="sudo mount"
alias umount="sudo umount"
alias blkid="sudo blkid"
alias ufw="sudo ufw"
alias timeshift="sudo timeshift"


# establecer el editor de la terminal 

if [ -f /bin/micro ]; then
    export EDITOR=/bin/micro
    alias {editar,editor,ed}=micro
elif [ -f /bin/vim ]; then
    export EDITOR=/bin/vim
    alias {editar,editor,ed}=vim
elif [ -f /bin/nano ]; then
    export EDITOR=/bin/nano
    alias {editar,editor,ed}=nano
fi

# editar archivos recurrentes
# requiere xdg-utils
alias {zshrc,zr}="xdg-open ~/.zshrc >/dev/null 2>&1 || $EDITOR .zshrc"
alias {bashrc,br}="xdg-open ~/.bashrc >/dev/null 2>&1 || $EDITOR .bashrc"
alias {nanorc,nr}="xdg-open ~/.nanorc >/dev/null 2>&1 || $EDITOR .nanorc"
alias {aliases,al}="xdg-open ~/.aliases >/dev/null 2>&1 || $EDITOR .aliases "
alias fstab="xdg-open /etc/fstab >/dev/null 2>&1 || $EDITOR /etc/fstab"
alias redshift.conf="xdg-open ~/.config/redshift.conf >/dev/null 2>&1 || $EDITOR ~/.config/redshift.conf"
alias rofi.conf="xdg-open ~/.config/rofi/config.rasi >/dev/null 2>&1 || $EDITOR .bashrc ~/.config/rofi/config.rasi"
alias pacman.conf="xdg-open /etc/pacman.conf >/dev/null 2>&1 || $EDITOR .bashrc /etc/pacman.conf"
alias grub="xdg-open /etc/default/grub >/dev/null 2>&1 || $EDITOR /etc/default/grub "
if [ -f /usr/bin/pacman ]; then
    alias mirrors="xdg-open /etc/pacman.d/mirrorlist >/dev/null 2>&1 || $EDITOR .bashrc /etc/pacman.d/mirrorlist"
elif [ -f /usr/bin/apt ]; then
    alias mirrors="xdg-open /etc/apt/sources.list >/dev/null 2>&1 || $EDITOR /etc/apt/sources.list"
else
    echo "no se encontró"
fi


# phyton
alias py="python3"
alias pip="pip3"


# android debug bridge
alias adbl="adb shell pm list packages"
alias adbd="adb shell pm disable-user --user 0" # Useful if testing or if you are unsure if you should delete an app
alias adbe="adb shell pm enable --user 0" 
alias adbu="adb shell pm uninstall --user 0"
alias adbi="adb shell pm install-existing --user 0"


# otros aliases standard
alias df='df -h'      # human-readable sizes
alias free='free -h'  # human-readable sizes
alias more=less
alias grep='grep --colour=auto'
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'

# sistema
alias private-ip="hostname -I"
public-ip () {
host myip.opendns.com resolver1.opendns.com | grep 'myip.opendns.com has' | awk '{print $4}'
}



#############################
#       FUNCIONES           #
#############################


# Create a new directory and enter it
function mkcd() {
	mkdir -p "$@" && cd "$_";
}

function ff () {
    find . -iname '*'"$@"'*' -ls
}


  # Normalize `open` across Linux, macOS, and Windows.
# This is needed to make the `o` function (see below) cross-platform.
if [ ! $(uname -s) = 'Darwin' ]; then
	if grep -q Microsoft /proc/version; then
		# Ubuntu on Windows using the Linux subsystem
		alias open='explorer.exe';
	else
		alias open='xdg-open';
	fi
fi

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}


# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}


# get current host related info
function sysinfo () {
    echo -e "\n${BRed}System Informations:$NC " ; uname -a
    echo -e "\n${BRed}Online User:$NC " ; w -hs | cut -d "" f1 | sort | uniq
    echo -e "\n${BRed}Date :$NC " ; date
    echo -e "\n${BRed}Server stats :$NC " ; uptime
    echo -e "\n${BRed}Memory stats :$NC " ; free
    echo -e "\n${BRed}Public ip address :$NC " ; host myip.opendns.com resolver1.opendns.com | grep "myip.opendns.com has" | awk '{print $4}'

    echo -e "\n${BRed}Open Connections :$NC " ; netstat -pan --inet
    echo -e "\n${BRed}CPU info :$NC " ; cat /proc/cpuinfo
    echo -e "\n"
}


# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


